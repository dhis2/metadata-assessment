# Copyright (c) 2021, University of Oslo
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# Neither the name of the HISP project nor the names of its contributors may
# be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
---
  summary_uid: u6FjOBDZY4r
  name: sections_wrong_sort_order
  description: Data set sections with incorrect sort order
  section: Datasets
  section_order: 4
  summary_sql: >-
    WITH sections_wrong_sort_order as (
    SELECT DISTINCT s.name as section_name, ds.name as dataset_name,
    s.sortorder, s.row_number -1 as row_number  FROM (
    SELECT name, datasetid,sortorder, row_number()
    over ( PARTITION BY datasetid ORDER BY sortorder) as row_number
    from section
    ) as s
    INNER JOIN dataset ds on s.datasetid = ds.datasetid
    where s.sortorder != s.row_number - 1
    ORDER BY ds.name,s.sortorder
    )
    SELECT 'sections_wrong_sort_order' as indicator,
    COUNT(*)::varchar  as value,
    ( 100 * COUNT(*) / (SELECT COUNT(*) FROM section ))  || '%' as percent,
    'Dataset sections with non-sequential sort order' as description
    FROM sections_wrong_sort_order LIMIT 1;
  details_uid: UCdK7FmUvp4
  details_sql: >-
    SELECT DISTINCT s.name as section_name, ds.name as dataset_name,
    s.sortorder, s.row_number -1 as row_number  FROM (
    SELECT name, datasetid,sortorder, row_number()
    over ( PARTITION BY datasetid ORDER BY sortorder) as row_number
    from section
    ) as s
    INNER JOIN dataset ds on s.datasetid = ds.datasetid
    where s.sortorder != s.row_number - 1
    ORDER BY ds.name,s.sortorder;
  severity: WARNING
  introduction: >
    Dataset sections are used to group certain related sections in a section data entry form.
    They can also be ordered. The order of the sections may become corrupted if sections are
    added or deleted.
  recommendation: >
    It is possible to fix the sort order of data set sections by using the `fixSortOrder` SQL
    function which is available in the dhis2-utils Github repository
    (https://github.com/dhis2/dhis2-utils/tree/master/resources/sql). Using this script you 
    can fix the sort order for each affected data set section. 
